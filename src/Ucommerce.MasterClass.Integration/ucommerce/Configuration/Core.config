<!--
	Core configuration for uCommerce components.
-->
<configuration>
  
  <components>
    <component
      id="ConnectionStringLocator"
      service="UCommerce.Infrastructure.Configuration.IConnectionStringLocator, UCommerce.Infrastructure"
      type="UCommerce.Sitefinity.Configuration.ConnectionStringLocator, UCommerce.Sitefinity">
      <parameters>
        <ConnectionString>#{connectionString}</ConnectionString>
      </parameters>
    </component>

    <component
      id="CatalogConfiguration"
      service="UCommerce.Infrastructure.Configuration.CatalogConfiguration"
      type="UCommerce.Infrastructure.Configuration.CatalogConfiguration">
      <parameters>
        <DefaultCultureCode>#{defaultCultureCode}</DefaultCultureCode>
        <EnforceCategoryNameUniquenessWithinCatalogs>#{enforceCategoryNameUniquenessWithinCatalogs}</EnforceCategoryNameUniquenessWithinCatalogs>
      </parameters>
    </component>
    
    <!-- Data Access -->
		<component
			id="SessionProvider"
			service="UCommerce.EntitiesV2.ISessionProvider, UCommerce"
			type="UCommerce.EntitiesV2.SessionProvider, UCommerce">
		  <parameters>
        <EnableCache>#{enableCache}</EnableCache>
        <CacheProvider>#{cacheProvider}</CacheProvider>
		    <ConnectionIsolation>#{databaseConnectionIsolationLevel}</ConnectionIsolation>
		  </parameters>
			<interceptors>
				<interceptor>${ExceptionLoggingInterceptor}</interceptor>
			</interceptors>
		</component>

    <component
      id="ConnectionStringLocator"
      service="UCommerce.Infrastructure.Configuration.IConnectionStringLocator, UCommerce.Infrastructure"
      type="UCommerce.Infrastructure.Configuration.ConnectionStringLocator, UCommerce.Infrastructure">
      <parameters>
        <connectionString>#{connectionString}</connectionString>
      </parameters>  
    </component>

		<component
			id="StatelessSessionProvider"
			service="UCommerce.EntitiesV2.IStatelessSessionProvider, UCommerce"
			type="UCommerce.EntitiesV2.SessionProvider, UCommerce">
		  <parameters>
		    <EnableCache>#{enableCache}</EnableCache>
		    <CacheProvider>#{cacheProvider}</CacheProvider>
		    <ConnectionIsolation>#{databaseConnectionIsolationLevel}</ConnectionIsolation>
		  </parameters>
			<interceptors>
				<interceptor>${ExceptionLoggingInterceptor}</interceptor>
			</interceptors>
		</component>

		<component
			id="CacheProvider"
			service="UCommerce.EntitiesV2.ICacheProvider, UCommerce"
			type="UCommerce.EntitiesV2.CacheProvider, UCommerce"/>

		<component
			id="UCommerce.CoreDataMappings"
			service="UCommerce.EntitiesV2.IContainsNHibernateMappingsTag, UCommerce"
			type="UCommerce.EntitiesV2.MappingAssemblyTag, UCommerce"/>

		<component
			id="Repository"
			service="UCommerce.EntitiesV2.IRepository`1, UCommerce"
			type="UCommerce.EntitiesV2.Repository`1, UCommerce"/>

		<component
			id="SoftDeletableRepository"
			service="UCommerce.EntitiesV2.ISoftDeletableRepository`1, UCommerce"
			type="UCommerce.EntitiesV2.SoftDeletableRepository`1, UCommerce"/>

		<!-- Interceptors -->
		<component
			id="ExceptionLoggingInterceptor"
			service="UCommerce.Infrastructure.Interceptor.ExceptionLoggingInterceptor, UCommerce.Infrastructure"
			type="UCommerce.Infrastructure.Interceptor.ExceptionLoggingInterceptor, UCommerce.Infrastructure"/>

		<component
			id="XmlExceptionInterceptor"
			service="UCommerce.Xslt.Interceptors.XmlExceptionInterceptor, UCommerce.Infrastructure"
			type="UCommerce.Xslt.Interceptors.XmlExceptionInterceptor, UCommerce.Infrastructure"/>

		<component
			id="TimingInterceptor"
			service="UCommerce.Infrastructure.Interceptor.TimingInterceptor, UCommerce.Infrastructure"
			type="UCommerce.Infrastructure.Interceptor.TimingInterceptor, UCommerce.Infrastructure"/>

    <component
			id="LocalizationContext"
			service="UCommerce.Infrastructure.Globalization.ILocalizationContext, UCommerce.Infrastructure"
			type="UCommerce.Infrastructure.Globalization.Globalization, UCommerce.Infrastructure">
      <parameters>
        <DefaultCultureCode>#{defaultCultureCode}</DefaultCultureCode>
      </parameters>  
    </component>

		<!-- Services -->
		<component
			id="OrderService"
			service="UCommerce.Transactions.IOrderService, UCommerce"
			type="UCommerce.Transactions.OrderService, UCommerce"/>

		<component
			id="PriceService"
			service="UCommerce.Catalog.IPricingService, UCommerce"
			type="UCommerce.Catalog.PricingService, UCommerce"/>

		<component
			id="TaxService"
			service="UCommerce.Catalog.ITaxService, UCommerce"
			type="UCommerce.Catalog.TaxService, UCommerce"/>

		<component
			id="UrlService"
			service="UCommerce.Catalog.IUrlService, UCommerce"
			type="UCommerce.Catalog.UrlService, UCommerce"/>

		<component
			id="ProductReviewService"
			service="UCommerce.Catalog.ProductReviewService, UCommerce"
			type="UCommerce.Catalog.ProductReviewService, UCommerce"/>

		<component
			id="CheckoutService"
			service="UCommerce.Transactions.CheckoutService, UCommerce"
			type="UCommerce.Transactions.CheckoutService, UCommerce"/>

		<component
		  id="NumberSeriesService"
		  service ="UCommerce.Transactions.INumberSeriesService, UCommerce"
		  type="UCommerce.Transactions.NumberSeriesService, UCommerce"/>

		<component
		  id="RoundingService"
		  service ="UCommerce.Transactions.IRoundingService, UCommerce"
		  type="UCommerce.Transactions.RoundingService, UCommerce"/>

		<component
			id="AbsoluteUrlService"
			service="UCommerce.Web.IAbsoluteUrlService, UCommerce"
			type="UCommerce.Web.Impl.AbsoluteUrlService, UCommerce">
			<parameters>
				<includeLanguage>False</includeLanguage>
				<includePort>False</includePort>
			</parameters>
		</component>

		<component
			id="uCommercePathService"
			service="UCommerce.Infrastructure.Runtime.IPathService, UCommerce.Infrastructure"
			type="UCommerce.Infrastructure.Runtime.uCommercePathService, UCommerce.Infrastructure"/>

		<component 
			id="CallbackUrl" 
			service="UCommerce.Web.ICallbackUrl, UCommerce"
			type="UCommerce.Web.Impl.CallbackUrl, UCommerce" />

    <component
      id="RequestPaymentUrl"
      service="UCommerce.Web.IRequestPaymentUrl, UCommerce"
      type="UCommerce.Web.Impl.RequestPaymentUrl, UCommerce" />

		<component
			id="AppsService"
			service="UCommerce.Apps.IAppsService, UCommerce"
			type="UCommerce.Apps.AppsService, UCommerce"/>

    <component
        id="ProductPriceCalculationService"
        service="UCommerce.Catalog.IProductPriceCalculationService, UCommerce"
        type="UCommerce.Catalog.Impl.ProductPriceCalculationService, UCommerce"/>
    
    <!-- Product Price queries-->
    <component
        id="ProductPriceQuery"
        service="UCommerce.IQuery`2[[UCommerce.Catalog.Models.ProductPriceQueryArgs, UCommerce][UCommerce.Catalog.Models.ProductPriceQueryResult, UCommerce]]"
        type="UCommerce.NHibernate.Impl.ProductPriceQuery, UCommerce.NHibernate"/>
    
	    service="UCommerce.IQuery`2[[UCommerce.Catalog.Models.ProductPriceQueryArgs, UCommerce][UCommerce.Catalog.Models.ProductPriceQueryResult, UCommerce]]"
	
		<!-- Infrastructure -->
		<component
			id="WebRuntimeInspector"
			service="UCommerce.Infrastructure.Environment.IWebRuntimeInspector, UCommerce.Infrastructure"
			type="UCommerce.Infrastructure.Environment.WebRuntimeInspector, UCommerce.Infrastructure" />

		

		<component
			id="WebRuntimeInspector"
			service="UCommerce.Infrastructure.Environment.IWebRuntimeInspector, UCommerce.Infrastructure"
			type="UCommerce.Infrastructure.Environment.WebRuntimeInspector, UCommerce.Infrastructure" />

		

		
		<component
			id="UpdateAuditModifiedData"
			service="UCommerce.EntitiesV2.Revisions.IUpdateAuditModifiedData, UCommerce"
			type="UCommerce.EntitiesV2.Revisions.Impl.UpdateAuditModifiedData, UCommerce" />
		
		<!--- Security -->
		<component
			id="RoleService"
			service="UCommerce.Security.IRoleService, UCommerce"
			type="UCommerce.Security.RoleService, UCommerce"/>

		<component
				id="EnsureRolesService"
				service="UCommerce.Security.IEnsureRolesAreUpToDateService, UCommerce"
				type="UCommerce.Security.EnsureRolesAreUpToDateService, UCommerce"/>

    <component
				id="SecurityService"
				service="UCommerce.Security.ISecurityService, UCommerce"
				type="UCommerce.Security.SecurityService, UCommerce">
      <parameters>
        <Enabled>#{securityFoundationEnabled}</Enabled>
      </parameters>
    </component>

    <component
      id="EntityPropertyValueService"
      service="UCommerce.EntitiesV2.Definitions.IEntityPropertyValueService, UCommerce"
      type="UCommerce.EntitiesV2.Definitions.EntityPropertyValueService, UCommerce"/>

    <component
      id="DataTypeDefinitionInspector"
      service="UCommerce.EntitiesV2.Definitions.IDataTypeDefinitionInspector, UCommerce"
      type="UCommerce.EntitiesV2.Definitions.DataTypeDefinitionInspector, UCommerce"/>

    <!-- Services -->
    <component
      id="DefinitionGraphService"
      service="UCommerce.Services.IDefinitionGraphService, UCommerce"
      type="UCommerce.Services.Impl.DefinitionGraphService, UCommerce"/>

    </components>
</configuration>